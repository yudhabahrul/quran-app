{"version":3,"file":"static/js/952.9170178b.chunk.js","mappings":"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","sources":["component/MainQuran.js","component/Ayat.js","component/Surah.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useQuery } from \"react-query\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\n\nconst fetchSurah = async () => {\n  const res = await axios.get(\"https://api.quran.gading.dev/surah\");\n  return res;\n};\n\nconst MainQuran = ({ getNomor, setPlay }) => {\n  const { data } = useQuery(\"surah\", fetchSurah);\n  const [nomor, setNomor] = useState(1);\n  const [filterSurah, setFilterSurah] = useState([]);\n  const text = useSelector((selector) => selector.search?.search) || \"\";\n\n  useEffect(() => {\n    const filterData = () => {\n      const filterValue = data?.data?.data.filter((s) =>\n        s.name?.transliteration?.id.toLowerCase()?.includes(text.toLowerCase())\n      );\n      setFilterSurah(filterValue);\n    };\n\n    filterData();\n  }, [text, data?.data?.data]);\n\n  const handleNomor = (no) => {\n    getNomor(no);\n    setNomor(no);\n    setPlay();\n  };\n\n  return (\n    <div className=\"main-quran\">\n      <ul>\n        {filterSurah?.map((s, index) => (\n          <li\n            key={index}\n            onClick={() => handleNomor(s.number)}\n            className={s.number === nomor ? \"item border\" : \"item\"}\n          >\n            <div className=\"ayat\">{s.number}</div>\n            <div className=\"surah\">\n              <div className=\"name\">{s.name?.transliteration?.id}</div>\n              <div className=\"info\">{s.name?.translation?.id}</div>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default MainQuran;\n","import { useState, useEffect, useRef } from \"react\";\nimport { BsArrowRight, BsShare } from \"react-icons/bs\";\nimport { MdFavoriteBorder } from \"react-icons/md\";\nimport {\n  AiOutlinePlayCircle,\n  AiOutlinePauseCircle,\n  AiOutlineCopy,\n} from \"react-icons/ai\";\nimport axios from \"axios\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\nimport { useDispatch } from \"react-redux\";\nimport { addFavorit, lastRead, lastListening } from \"../redux/action\";\n\nconst Ayat = ({ nomor, isPlay, setIsPlay }) => {\n  const [surah, setSurah] = useState([]);\n  const [urlAudio, setUrlAudio] = useState(\"\");\n  const [copie, setCopie] = useState(-1);\n  const [indexAudio, setIndexAudio] = useState(null);\n  const dispatch = useDispatch();\n  const audio = useRef([]);\n\n  useEffect(() => {\n    const getAyat = async () => {\n      try {\n        const res = await axios.get(\"https://api.quran.gading.dev/surah/1\");\n        setSurah(res.data.data);\n      } catch (e) {}\n    };\n    getAyat();\n  }, []);\n\n  useEffect(() => {\n    if (nomor) {\n      audio.current = audio.current.slice(0, nomor?.verses?.length);\n    } else {\n      audio.current = audio.current.slice(0, surah?.verses?.length);\n    }\n  }, [nomor]);\n\n  useEffect(() => {\n    if (copie !== -1) {\n      setTimeout(() => setCopie(-1), 2800);\n    }\n  }, [copie]);\n\n  useEffect(() => {\n    if (audio.current[indexAudio]) {\n      if (isPlay) {\n        audio.current[indexAudio].play();\n      }\n      if (!isPlay) {\n        audio.current[indexAudio].pause();\n        audio.current[indexAudio].currentTime = 0;\n      }\n    }\n  }, [isPlay, urlAudio, indexAudio]);\n\n  const handleFavorit = (v, surah, ayat) => {\n    dispatch(addFavorit(v));\n    dispatch(lastRead({ surah, ayat }));\n  };\n\n  const handleAudio = (url, idx, surah, ayat) => {\n    setUrlAudio(url);\n    setIndexAudio(idx);\n    dispatch(lastListening({ surah, ayat }));\n    if (!isPlay) {\n      setIsPlay(true);\n    } else {\n      setIsPlay(false);\n    }\n  };\n\n  return (\n    <div className=\"ayat-container\">\n      <ul>\n        {nomor?.verses\n          ? nomor.verses?.map((v, index) => (\n              <li key={index}>\n                <div className=\"ayat\">\n                  <div className=\"no\">{v.number.inSurah}</div>\n                  <div className=\"bacaan\">{v.text.arab}</div>\n                </div>\n                <h2>\n                  INDONESIA-SAHIH INTERNATIONAL{\" \"}\n                  <span>\n                    | SEE TAFSIR <BsArrowRight className=\"icon\" />\n                  </span>\n                </h2>\n                <p>{v.translation.id}</p>\n                <div className=\"line\"></div>\n                <div className=\"icons\">\n                  <MdFavoriteBorder\n                    onClick={() =>\n                      handleFavorit(\n                        { ...v, id: v.audio.secondary[0] },\n                        nomor.name.transliteration.id,\n                        v.number.inSurah\n                      )\n                    }\n                  />\n                  <BsShare />\n                  <div className=\"audio\">\n                    <audio\n                      ref={(el) => (audio.current[index] = el)}\n                      src={urlAudio}\n                      onEnded={() => setIsPlay(!isPlay)}\n                    ></audio>\n                    {isPlay && indexAudio === index ? (\n                      <AiOutlinePauseCircle\n                        onClick={() =>\n                          handleAudio(\n                            v.audio.primary,\n                            index,\n                            nomor.name.transliteration.id,\n                            v.number.inSurah\n                          )\n                        }\n                      />\n                    ) : (\n                      <AiOutlinePlayCircle\n                        onClick={() =>\n                          handleAudio(\n                            v.audio.primary,\n                            index,\n                            nomor.name.transliteration.id,\n                            v.number.inSurah\n                          )\n                        }\n                      />\n                    )}\n                  </div>\n                  <div className=\"copy\">\n                    <CopyToClipboard\n                      text={v.text.arab}\n                      onCopy={() => setCopie(index)}\n                    >\n                      <span>\n                        <AiOutlineCopy />\n                      </span>\n                    </CopyToClipboard>\n                    {copie === index ? (\n                      <div className=\"popup\">Copied</div>\n                    ) : null}\n                  </div>\n                </div>\n              </li>\n            ))\n          : surah.verses?.map((v, index) => (\n              <li key={index}>\n                <div className=\"ayat\">\n                  <div className=\"no\">{v.number.inSurah}</div>\n                  <div className=\"bacaan\">{v.text.arab}</div>\n                </div>\n                <h2>\n                  INDONESIA-SAHIH INTERNATIONAL{\" \"}\n                  <span>\n                    | SEE TAFSIR <BsArrowRight className=\"icon\" />\n                  </span>\n                </h2>\n                <p>{v.translation.id}</p>\n                <div className=\"line\"></div>\n                <div className=\"icons\">\n                  <MdFavoriteBorder\n                    onClick={() =>\n                      handleFavorit(\n                        { ...v, id: v.audio.secondary[0] },\n                        surah.name.transliteration.id,\n                        v.number.inSurah\n                      )\n                    }\n                  />\n                  <BsShare />\n                  <div className=\"audio\">\n                    <audio\n                      ref={(el) => (audio.current[index] = el)}\n                      src={urlAudio}\n                      onEnded={() => setIsPlay(!isPlay)}\n                    ></audio>\n                    {isPlay && indexAudio === index ? (\n                      <AiOutlinePauseCircle\n                        onClick={() =>\n                          handleAudio(\n                            v.audio.primary,\n                            index,\n                            surah.name.transliteration.id,\n                            v.number.inSurah\n                          )\n                        }\n                      />\n                    ) : (\n                      <AiOutlinePlayCircle\n                        onClick={() =>\n                          handleAudio(\n                            v.audio.primary,\n                            index,\n                            surah.name.transliteration.id,\n                            v.number.inSurah\n                          )\n                        }\n                      />\n                    )}\n                  </div>\n                  <div className=\"copy\">\n                    <CopyToClipboard\n                      text={v.text.arab}\n                      onCopy={() => setCopie(index)}\n                    >\n                      <span>\n                        <AiOutlineCopy />\n                      </span>\n                    </CopyToClipboard>\n                    {copie === index ? (\n                      <div className=\"popup\">Copied</div>\n                    ) : null}\n                  </div>\n                </div>\n              </li>\n            ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Ayat;\n","import { useState, lazy, Suspense } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { BsInfoLg } from \"react-icons/bs\";\nimport MainQuran from \"./MainQuran\";\nimport Ayat from \"./Ayat\";\nimport axios from \"axios\";\n\nconst Info = lazy(() => import(\"./Info\"));\n\nconst fetchSurahById = async ({ queryKey }) => {\n  const [key, nomor] = queryKey;\n  const res = await axios.get(`https://api.quran.gading.dev/surah/${nomor}`);\n  return res;\n};\n\nconst Surah = () => {\n  const [nomor, setNomor] = useState(null);\n  const [displayInfo, setDisplayInfo] = useState(false);\n  const { data } = useQuery([\"surah\", nomor], fetchSurahById, {\n    enabled: !!nomor,\n    keepPreviousData: true,\n  });\n  const [isPlay, setIsPlay] = useState(false);\n\n  const handleDisplayInfo = () => {\n    setDisplayInfo(true);\n  };\n\n  const handleHiddenInfo = () => {\n    setDisplayInfo(false);\n  };\n\n  const getNomor = (nomor) => {\n    setNomor(nomor);\n  };\n\n  const setPlay = () => {\n    if (isPlay) {\n      setIsPlay(!isPlay);\n    }\n  };\n\n  return (\n    <div className=\"surah-container\">\n      {displayInfo && <div className=\"bg-info\"></div>}\n      <MainQuran getNomor={getNomor} nomor={nomor} setPlay={setPlay} />\n      <Ayat nomor={data?.data?.data} isPlay={isPlay} setIsPlay={setIsPlay} />\n      <Suspense fallback={<div></div>}>\n        <Info displayInfo={displayInfo} handleHiddenInfo={handleHiddenInfo} />\n      </Suspense>\n      {displayInfo ? null : (\n        <BsInfoLg className=\"display-icons\" onClick={handleDisplayInfo} />\n      )}\n    </div>\n  );\n};\n\nexport default Surah;\n"],"names":["fetchSurah","axios","res","getNomor","setPlay","data","useQuery","useState","nomor","setNomor","filterSurah","setFilterSurah","text","useSelector","selector","search","useEffect","filterValue","filter","s","name","transliteration","id","toLowerCase","includes","filterData","className","map","index","onClick","no","number","translation","isPlay","setIsPlay","surah","setSurah","urlAudio","setUrlAudio","copie","setCopie","indexAudio","setIndexAudio","dispatch","useDispatch","audio","useRef","getAyat","current","slice","verses","length","setTimeout","play","pause","currentTime","handleFavorit","v","ayat","addFavorit","lastRead","handleAudio","url","idx","lastListening","inSurah","arab","secondary","ref","el","src","onEnded","primary","CopyToClipboard","onCopy","Info","lazy","fetchSurahById","queryKey","displayInfo","setDisplayInfo","enabled","keepPreviousData","Suspense","fallback","handleHiddenInfo"],"sourceRoot":""}